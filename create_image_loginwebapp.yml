---
- hosts: ansible
  become: yes
  vars_files:
    - /opt/Docker/vault.yml

  tasks:
    - name: Ensure Docker is installed (Ubuntu/Debian)
      apt:
        name: docker.io
        state: present
        update_cache: yes
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

    - name: Ensure Docker is installed (RHEL/CentOS)
      yum:
        name: docker
        state: present
        update_cache: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

    - name: Ensure Docker service is started and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Get Docker Compose uname -s
      command: uname -s
      register: uname_s

    - name: Get Docker Compose uname -m
      command: uname -m
      register: uname_m

    - name: Ensure Docker Compose is installed
      get_url:
        url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ uname_s.stdout }}-{{ uname_m.stdout }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Verify docker-compose installation
      command: /usr/local/bin/docker-compose --version

    - name: Stop and remove all Docker containers
      shell: docker rm -f $(docker ps -a -q) || true

    - name: Remove all Docker images
      shell: docker rmi -f $(docker images -q) || true

    - name: Copy SQL files from Jenkins to Ansible server
      synchronize:
        src: /var/lib/jenkins/workspace/LoginWebApp_CI_Job/sql/
        dest: /opt/Docker/sql/
        recursive: yes
      delegate_to: jenkins-server

    - name: Ensure webapp_content directory exists
      file:
        path: /opt/Docker/webapp_content
        state: directory

    - name: Copy WAR file from Jenkins to Ansible server
      synchronize:
        src: /var/lib/jenkins/workspace/LoginWebApp_CI_Job/target/LoginWebApp.war
        dest: /opt/Docker/webapp_content/LoginWebApp.war
      delegate_to: jenkins-server

    - name: Extract WAR file
      command: jar -xvf /opt/Docker/webapp_content/LoginWebApp.war
      args:
        chdir: /opt/Docker/webapp_content

    - name: Build and start Docker Compose services
      command: docker-compose up -d --build
      args:
        chdir: /opt/Docker

    - name: Login to Docker Hub
      command: echo "{{ docker_password }}" | docker login -u "{{ docker_username }}" --password-stdin

    - name: Push Docker image to Docker Hub
      command: docker push edisongomezs/loginwebapp:latest
